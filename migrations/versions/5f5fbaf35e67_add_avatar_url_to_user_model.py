"""Add avatar_url to User model

Revision ID: 5f5fbaf35e67
Revises: 1999a8aaf65c
Create Date: 2025-09-05 14:42:33.515759

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "5f5fbaf35e67"
down_revision = "1999a8aaf65c"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        # Step 1: Add the column, but make it nullable=True for now. This allows existing rows to be empty.
        batch_op.add_column(
            sa.Column("avatar_url", sa.String(length=255), nullable=True)
        )

    # Step 2: Now that the column exists, update all existing rows to have the default value.
    # We define a temporary 'user' table object to interact with.
    user_table = sa.table("user", sa.column("avatar_url", sa.String))
    default_avatar_url = "https://res.cloudinary.com/demo/image/upload/w_100,h_100,c_thumb,g_face,r_max/face_left.png"
    op.execute(
        user_table.update()
        .where(user_table.c.avatar_url.is_(None))
        .values(avatar_url=default_avatar_url)
    )

    # Step 3 (Optional but good practice): Now that all rows have a value, we can safely make the column non-nullable.
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.alter_column("avatar_url", nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_column("avatar_url")

    # ### end Alembic commands ###
